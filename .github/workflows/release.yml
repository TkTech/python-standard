on:
  workflow_call:
    inputs:
      use_poetry:
        required: false
        type: boolean
      use_sphinx:
        required: false
        type: boolean
      python_version:
        required: false
        type: string
        default: '3.11'
      platform:
        required: false
        default: 'ubuntu-latest'
        type: string
    secrets:
      PYPI_TOKEN:
        required: true

jobs:
  build:
    if: ${{ inputs.use_cibuildwheel }} == 'false'
    runs-on: ${{ inputs.platform }}
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install Poetry
        if: ${{ inputs.use_poetry }} == 'true'
        run: |
          pip install poetry

      - name: Install dependencies
        run: |
          if [ "${{ inputs.use_poetry }}" = "true" ]; then
            poetry install --all-extras
          else
            pip install -r requirements.txt
            if [ -f requirements-dev.txt ]; then
              pip install -r requirements-dev.txt
            fi
          fi

      - name: Building documentation
        if: ${{ inputs.use_sphinx }} == 'true'
        run: |
          if [ "${{ inputs.use_poetry }}" = "true" ]; then
            cd docs && poetry run make clean html
          else
            cd docs && make clean html
          fi

      - name: Packaging documentation
        if: ${{ inputs.use_sphinx }} == 'true'
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: docs/_build/html

      - name: Building package
        if: ${{ inputs.use_poetry }} == 'true'
        run: |
          if [ "${{ inputs.use_poetry }}" = "true" ]; then
            poetry build
          else
            python setup.py sdist bdist_wheel
          fi

      - name: Upload package
        if: ${{ inputs.use_poetry }} == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/
          if-no-files-found: error

  publish_documentation:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: github-pages
    steps:
      - name: Publishing documentation
        if: ${{ inputs.use_sphinx }} == 'true'
        uses: actions/deploy-pages@v4
        id: deployment

  publish_packages:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true